{"ast":null,"code":"var _jsxFileName = \"E:\\\\VS_Code\\\\Full-Stack\\\\my_contacts\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Alan Smith',\n      email: 'alan@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Megan Wilson',\n      email: 'megan@gmail.com',\n      phone: '222-222-2222',\n      type: 'professional'\n    }, {\n      id: 3,\n      name: 'Jeff Hopes',\n      email: 'jeff@gmail.com',\n      phone: '333-333-3333',\n      type: 'personal'\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Add Contact\n\n  const addContact = async contact => {\n    contact.id = uuid();\n    const res = await axios.post('/api/contacts', contact);\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; //Delete Contact\n\n\n  const deleteContact = contact => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: contact\n    });\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contacts\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n\n\n  const filterContact = text => {\n    console.log('From Context', text);\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["E:/VS_Code/Full-Stack/my_contacts/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","v4","uuid","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","res","post","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","console","log","clearFilter","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport {v4 as uuid} from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n    ADD_CONTACT ,\r\n    DELETE_CONTACT ,\r\n    SET_CURRENT ,\r\n    CLEAR_CURRENT ,\r\n    UPDATE_CONTACT ,\r\n    FILTER_CONTACT ,\r\n    CLEAR_FILTER ,\r\n    SET_ALERT ,\r\n    REMOVE_ALERT\r\n} from '../types';\r\n\r\nconst ContactState = (props) =>{\r\n    const initialState = {\r\n        contacts : [\r\n            {\r\n                id: 1,\r\n                name: 'Alan Smith',\r\n                email: 'alan@gmail.com',\r\n                phone: '111-111-1111',\r\n                type: 'personal'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Megan Wilson',\r\n                email: 'megan@gmail.com',\r\n                phone: '222-222-2222',\r\n                type: 'professional'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Jeff Hopes',\r\n                email: 'jeff@gmail.com',\r\n                phone: '333-333-3333',\r\n                type: 'personal'\r\n            }\r\n        ],\r\n        current : null,\r\n        filtered : null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    //Add Contact\r\n    const addContact = async (contact) => {\r\n        contact.id = uuid();\r\n\r\n        const res = await axios.post('/api/contacts', contact)\r\n\r\n        dispatch({ type: ADD_CONTACT, payload: contact });\r\n    }\r\n\r\n    //Delete Contact\r\n    const deleteContact = (contact) => {\r\n        dispatch({ type: DELETE_CONTACT, payload: contact });\r\n    }\r\n\r\n    //Set current contact\r\n    const setCurrent = (contact) => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n\r\n    //Clear current contact\r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n\r\n    //Update contacts\r\n    const updateContact = (contact) => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n    }\r\n\r\n    //Filter contacts\r\n    const filterContact = (text) => {\r\n        console.log('From Context', text);\r\n        dispatch({type: FILTER_CONTACT, payload: text });\r\n    }\r\n\r\n    //Clear filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    }\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n        value={{\r\n            contacts: state.contacts,\r\n            current: state.current,\r\n            filtered: state.filtered,\r\n            addContact,\r\n            deleteContact,\r\n            setCurrent,\r\n            clearCurrent,\r\n            updateContact,\r\n            filterContact,\r\n            clearFilter\r\n        }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}
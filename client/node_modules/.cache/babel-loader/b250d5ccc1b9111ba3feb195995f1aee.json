{"ast":null,"code":"var _jsxFileName = \"E:\\\\VS_Code\\\\Full-Stack\\\\my_contacts\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { GET_CONTACT, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CONTACT_ERROR, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); //Get Contact\n\n  const getContact = async () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.get('/api/contacts', config);\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error\n      });\n    }\n  }; //Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error\n      });\n    }\n  }; //Delete Contact\n\n\n  const deleteContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.delete(`/api/contact/${contact}`, config); // dispatch({\n      //     type : GET_CONTACT,\n      //     payload : res.data\n      // })\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error\n      });\n    }\n  }; //Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; //Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; //Update contacts\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; //Filter contacts\n\n\n  const filterContact = text => {\n    console.log('From Context', text);\n    dispatch({\n      type: FILTER_CONTACT,\n      payload: text\n    });\n  }; //Clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      getContact,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      clear\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["E:/VS_Code/Full-Stack/my_contacts/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACT","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CONTACT_ERROR","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ContactState","props","initialState","contacts","current","filtered","error","state","dispatch","getContact","config","headers","res","get","type","payload","data","console","addContact","contact","post","deleteContact","delete","setCurrent","clearCurrent","updateContact","filterContact","text","log","clearFilter","clear","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n    GET_CONTACT ,\r\n    ADD_CONTACT ,\r\n    DELETE_CONTACT ,\r\n    SET_CURRENT ,\r\n    CLEAR_CURRENT ,\r\n    UPDATE_CONTACT ,\r\n    FILTER_CONTACT ,\r\n    CONTACT_ERROR,\r\n    CLEAR_FILTER ,\r\n    SET_ALERT ,\r\n    REMOVE_ALERT\r\n} from '../types';\r\n\r\nconst ContactState = (props) =>{\r\n    const initialState = {\r\n        contacts : [],\r\n        current : null,\r\n        filtered : null,\r\n        error : null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    //Get Contact\r\n    const getContact = async () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.get('/api/contacts', config);\r\n\r\n            dispatch({\r\n                type : GET_CONTACT,\r\n                payload : res.data\r\n            })\r\n         \r\n        } catch (error) {\r\n            console.error(error);\r\n            dispatch({ type: CONTACT_ERROR, payload: error});\r\n        }\r\n    }\r\n\r\n\r\n    //Add Contact\r\n    const addContact = async (contact) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config);\r\n\r\n            dispatch({ type: ADD_CONTACT, payload: res.data });\r\n        } catch (error) {\r\n            console.error(error);\r\n            dispatch({ type: CONTACT_ERROR, payload: error})\r\n        }\r\n        \r\n    }\r\n\r\n    //Delete Contact\r\n    const deleteContact = async (contact) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.delete(`/api/contact/${contact}`, config)\r\n\r\n            // dispatch({\r\n            //     type : GET_CONTACT,\r\n            //     payload : res.data\r\n            // })\r\n         \r\n        } catch (error) {\r\n            console.error(error);\r\n            dispatch({ type: CONTACT_ERROR, payload: error});\r\n        }\r\n    }\r\n\r\n    //Set current contact\r\n    const setCurrent = (contact) => {\r\n        dispatch({ type: SET_CURRENT, payload: contact });\r\n    }\r\n\r\n    //Clear current contact\r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT });\r\n    }\r\n\r\n    //Update contacts\r\n    const updateContact = (contact) => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\r\n    }\r\n\r\n    //Filter contacts\r\n    const filterContact = (text) => {\r\n        console.log('From Context', text);\r\n        dispatch({type: FILTER_CONTACT, payload: text });\r\n    }\r\n\r\n    //Clear filter\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER });\r\n    }\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n        value={{\r\n            contacts: state.contacts,\r\n            current: state.current,\r\n            filtered: state.filtered,\r\n            error: state.error,\r\n            getContact,\r\n            addContact,\r\n            deleteContact,\r\n            setCurrent,\r\n            clearCurrent,\r\n            updateContact,\r\n            filterContact,\r\n            clearFilter,\r\n            clear\r\n        }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}
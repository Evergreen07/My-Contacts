{"ast":null,"code":"import e from 'express';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACT, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT } from '../types';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return { ...state,\n        contacts: [...state.contacts, action.payload]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.filter(i => i.id !== action.payload)\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        current: action.payload\n      };\n\n    case CLEAR_CURRENT:\n      return { ...state,\n        current: null\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        contacts: state.contacts.forEach(i => {\n          if (i.id === action.payload.id) {\n            i = action.payload;\n          } else {\n            i = i;\n          }\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["E:/VS_Code/Full-Stack/my_contacts/client/src/context/contact/contactReducer.js"],"names":["e","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACT","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","state","action","type","contacts","payload","filter","i","id","current","forEach"],"mappings":"AAAA,OAAOA,CAAP,MAAc,SAAd;AACA,SACIC,WADJ,EAEIC,cAFJ,EAGIC,WAHJ,EAIIC,aAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,YAPJ,EAQIC,SARJ,EASIC,YATJ,QAUO,UAVP;AAYA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,WAAL;AACI,aAAO,EACH,GAAGS,KADA;AAEHG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFP,OAAP;;AAKJ,SAAKZ,cAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAuBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACG,OAA7C;AAFP,OAAP;;AAKJ,SAAKX,WAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFb,OAAP;;AAKJ,SAAKV,aAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHQ,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAKJ,SAAKb,cAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,OAAf,CAAuBH,CAAC,IAAI;AACpC,cAAGA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACG,OAAP,CAAeG,EAA3B,EAA8B;AAC1BD,YAAAA,CAAC,GAAGL,MAAM,CAACG,OAAX;AACH,WAFD,MAEK;AACDE,YAAAA,CAAC,GAACA,CAAF;AACH;AACF,SANS;AAFP,OAAP;;AAWJ;AACG,aAAON,KAAP;AAtCP;AAwCH,CAzCD","sourcesContent":["import e from 'express';\r\nimport {\r\n    ADD_CONTACT ,\r\n    DELETE_CONTACT ,\r\n    SET_CURRENT ,\r\n    CLEAR_CURRENT ,\r\n    UPDATE_CONTACT ,\r\n    FILTER_CONTACT ,\r\n    CLEAR_FILTER ,\r\n    SET_ALERT ,\r\n    REMOVE_ALERT\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter((i) => i.id !== action.payload)\r\n            }\r\n\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }   \r\n\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        \r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.forEach(i => {\r\n                  if(i.id === action.payload.id){\r\n                      i = action.payload;\r\n                  }else{\r\n                      i=i;\r\n                  }\r\n                })\r\n            }\r\n    \r\n        default:\r\n           return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}